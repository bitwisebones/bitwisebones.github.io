<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ascii graves</title>
    <link>/</link>
    <description>Recent content on ascii graves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jul 2024 12:15:03 -0500</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nintendo DS Homebrew Setup</title>
      <link>/posts/nds-homebrew-setup/</link>
      <pubDate>Mon, 01 Jul 2024 12:15:03 -0500</pubDate>
      
      <guid>/posts/nds-homebrew-setup/</guid>
      <description>I bought a Nintendo DS Lite on ebay for some future projects and wanted to be able to compile and run my own programs on it. The following is a rough recounting of the process.
Hardware From a hardware perspective, the only other things I needed were:
&amp;ldquo;R4&amp;rdquo; Flashcard: https://www.amazon.com/dp/B098T6VMYQ SanDisk 128 GB Micro SD card: https://www.amazon.com/dp/B0B7NTY2S6 (Not affiliate links)
Kernel/Launcher To prep the SD card, I formatted it with Rufus using the following settings:</description>
      <content>&lt;p&gt;I bought a Nintendo DS Lite on ebay for some future projects and wanted to be able to compile and run my own programs on it. The following is a rough recounting of the process.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;From a hardware perspective, the only other things I needed were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;R4&amp;rdquo; Flashcard: &lt;a href=&#34;https://www.amazon.com/dp/B098T6VMYQ&#34;&gt;https://www.amazon.com/dp/B098T6VMYQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SanDisk 128 GB Micro SD card: &lt;a href=&#34;https://www.amazon.com/dp/B0B7NTY2S6&#34;&gt;https://www.amazon.com/dp/B0B7NTY2S6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Not affiliate links)&lt;/p&gt;
&lt;h2 id=&#34;kernellauncher&#34;&gt;Kernel/Launcher&lt;/h2&gt;
&lt;p&gt;To prep the SD card, I formatted it with &lt;a href=&#34;https://rufus.ie/en/&#34;&gt;Rufus&lt;/a&gt; using the following settings:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rufus-settings.png&#34; alt=&#34;A screenshot of rufus showing the settings used&#34;&gt;&lt;/p&gt;
&lt;p&gt;The important bits here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot selection: Non bootable&lt;/li&gt;
&lt;li&gt;File system: Large FAT32&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With that done, I needed to download a kernel. The kernel acts as a launcher - it allows you to browse the files on the SD card (or a slot-2 cartridge) and select which one to run.&lt;/p&gt;
&lt;p&gt;The kernel I used is &amp;ldquo;Ace3DS+ Wood R4 v1.62&amp;rdquo;. You can find more information on &lt;a href=&#34;https://www.flashcarts.net/ds-quick-start-guide&#34;&gt;The Flashcarts Wiki&lt;/a&gt;, but here&amp;rsquo;s a direct download link: &lt;a href=&#34;https://flashcard-archive.ds-homebrew.com/Ace3DS+_R4iLS/Ace3DS+_R4iLS_Wood_R4_1.62.zip&#34;&gt;https://flashcard-archive.ds-homebrew.com/Ace3DS+_R4iLS/Ace3DS+_R4iLS_Wood_R4_1.62.zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I unzipped the file and copied the contents onto the SD card.&lt;/p&gt;
&lt;p&gt;Now, with the SD card in the R4 flashcard and the R4 in the DS, the DS successfully boots into the launcher.&lt;/p&gt;
&lt;h2 id=&#34;building-a-homebrew-ds-game&#34;&gt;Building a Homebrew DS Game&lt;/h2&gt;
&lt;p&gt;Setting up a development environment was much easier than I thought it would be, mainly thanks to dev containers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: here&amp;rsquo;s a great YouTube video that covers the basics of dev containers if you&amp;rsquo;re unfamiliar (like I was): &lt;a href=&#34;https://www.youtube.com/watch?v=SDa3v4Quj7Y&#34;&gt;https://www.youtube.com/watch?v=SDa3v4Quj7Y&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, let&amp;rsquo;s talk about prerequisites. I already had VS Code and Docker Desktop installed on my Windows dev machine. I also installed two VS Code extensions: &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack&#34;&gt;Remote Development&lt;/a&gt; and &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools&#34;&gt;C/C++&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next step was to create a dev container. Thanks to the video I linked above, I knew to use the &amp;ldquo;Clone Repository in Container Volume&amp;rdquo; command to clone an empty repo into a new dev container. I used a basic Debian image because I knew I&amp;rsquo;d be changing it later.&lt;/p&gt;
&lt;p&gt;Now that the container was created, I was able to edit the devcontainer.json config file. I chose to swap out the direct image reference for a reference to a Dockerfile, but that turned out not to be necessary in the end. It should be sufficient to change the image to be the latest version of &lt;code&gt;devkitpro/devkitarm&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;devcontainer.json&amp;gt;

{
	&amp;#34;name&amp;#34;: &amp;#34;NDS&amp;#34;,
	&amp;#34;image&amp;#34;: &amp;#34;devkitpro/devkitarm:20240511&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;rsquo;ve yet to mention &lt;a href=&#34;https://devkitpro.org/&#34;&gt;devkitPro&lt;/a&gt; - this is a toolchain and set of libraries that make it easy to write NDS games. They provide a bunch of &lt;a href=&#34;https://github.com/devkitPro/nds-examples&#34;&gt;examples&lt;/a&gt; that I referenced to get my project set up correctly.&lt;/p&gt;
&lt;p&gt;I copied a Makefile from the example repo, so I made sure to keep my directory layout the same&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project root/
&lt;ul&gt;
&lt;li&gt;.devcontainer/
&lt;ul&gt;
&lt;li&gt;devcontainer.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data/&lt;/li&gt;
&lt;li&gt;source/
&lt;ul&gt;
&lt;li&gt;main.cpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Makefile&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full repo is available on GitHub: &lt;a href=&#34;https://github.com/bitwisebones/nds-homebrew-example&#34;&gt;https://github.com/bitwisebones/nds-homebrew-example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With that all in place, I ran &lt;code&gt;make&lt;/code&gt; in the root folder in the container, and the &lt;code&gt;.nds&lt;/code&gt; file was successfully built.&lt;/p&gt;
&lt;p&gt;The last piece of the puzzle for me was getting the &lt;code&gt;.nds&lt;/code&gt; file onto the SD card. Just &lt;em&gt;finding&lt;/em&gt; that file (in the dev container&amp;rsquo;s volume, somewhere in the WSL filesystem) was a pain. The magic path for my Docker Desktop install was:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\\wsl.localhost\docker-desktop-data\data\docker\volumes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s the whole process. I was also able to run the .nds file on an &lt;a href=&#34;http://desmume.org/&#34;&gt;emulator&lt;/a&gt; to test changes before I went through the physical process of copying it to the SD card (which can be tedious).&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>NuVu Meter</title>
      <link>/posts/nuvu-meter/</link>
      <pubDate>Thu, 29 Feb 2024 06:00:00 -0500</pubDate>
      
      <guid>/posts/nuvu-meter/</guid>
      <description>I had a few salvaged VU meters burning a hole in my proverbial pocket, so I decided to turn one into a readout for my home&amp;rsquo;s energy usage.
At a high level, I have an Emporia Vue 2 that publishes energy readings to a self-hosted MQTT server (this is not default behavior and required flashing custom config to the device). My self-hosted NodeRed instance listens for those messages, extracts the relevant data, and issues a new message with the total point-in-time energy usage as a percentage of the last day&amp;rsquo;s max usage (it also saves all of the data so I can view it in Grafana).</description>
      <content>&lt;p&gt;I had a few salvaged VU meters burning a hole in my proverbial pocket, so I decided to turn one into a readout for my home&amp;rsquo;s energy usage.&lt;/p&gt;
&lt;p&gt;At a high level, I have an &lt;a href=&#34;https://shop.emporiaenergy.com/products/gen-2-emporia-vue-with-16-sensors-bundle&#34;&gt;Emporia Vue 2&lt;/a&gt; that publishes energy readings to a self-hosted MQTT server (this is not default behavior and required flashing custom config to the device). My self-hosted NodeRed instance listens for those messages, extracts the relevant data, and issues a new message with the total point-in-time energy usage as a percentage of the last day&amp;rsquo;s max usage (it also saves all of the data so I can view it in Grafana). A Raspberry Pi Pico W in the NuVu meter listens for those messages and then changes the needle position and backlight color accordingly.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;exploded-view.webp&#34; alt=&#34;An exploded view of the various pieces of the nuvu meter&#34;&gt;&lt;/p&gt;
&lt;p&gt;The main inspiration for this project was an old VU meter I had scavenged from a tape deck, so that&amp;rsquo;s what dictated the form factor of the final product.&lt;/p&gt;
&lt;p&gt;The electronics are very minimal - a Raspberry Pi Pico W (powered via USB) drives the RGB LED and the VU meter via PWM, and that&amp;rsquo;s all there is to it.&lt;/p&gt;
&lt;p&gt;I chose the Pico W because it was cheap and available. There are plenty of other options in this space that also would&amp;rsquo;ve worked just as well, like the ESP32 or any of the other WiFi dev boards sold by Adafruit or Seeed Studio.&lt;/p&gt;
&lt;p&gt;When designing the case, I wanted something that didn&amp;rsquo;t add too much bulk to the VU meter&amp;rsquo;s footprint. You can&amp;rsquo;t see it too well in the photos, but the coil that moves the needle sits at the bottom center and sticks out the back about 10mm, so that&amp;rsquo;s why the Pico is located in the top half of the enclosure rather than closer to the bottom. I&amp;rsquo;m not entirely happy with how the USB cable sticks out from the middle of the case, but it doesn&amp;rsquo;t pose any functional issues so I&amp;rsquo;ll learn to live with it.&lt;/p&gt;
&lt;p&gt;The mounting hole placement on the Pico is not the greatest. The holes near the USB port are so close to the edge of the PCB that it makes mounting difficult, which is how I ended up with the filler block that just sits on top of the PCB and around the USB port.&lt;/p&gt;
&lt;p&gt;I had also originally planned (and even tried) to use heat set inserts for the holes in the back cover, but I&amp;rsquo;m really bad at installing those so I opted for undersized holes that the screws sort of just self tap. It probably won&amp;rsquo;t hold up to too many disassemble/reassemble operations, but hopefully I won&amp;rsquo;t ever need to take it apart.&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;p&gt;I originally started out using MicroPython to build a prototype and found the fast feedback loop absolutely wonderful. It was especially great for dialing in specific color values or needle positions.&lt;/p&gt;
&lt;p&gt;That said, I wasn&amp;rsquo;t happy with the IDEs that were available, and I also struggled with confidently installing external packages (for MQTT). It seemed very easy for the code running on the device to get out of sync with the code on my host PC&amp;rsquo;s file system.&lt;/p&gt;
&lt;p&gt;I considered a few alternatives and eventually landed on good ol&amp;rsquo; Arduino. It&amp;rsquo;s still not perfect (dependency management seems environmental and not based on a &amp;ldquo;project&amp;rdquo;), but I was more comfortable with the end result.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s only about 100 lines of really straightforward code. The &lt;code&gt;setup&lt;/code&gt; function configures output pins, connects to WiFi, connects to MQTT, and then registers a callback handler that runs when a message is received.&lt;/p&gt;
&lt;p&gt;In response to a message, the callback parses the value received (0-100) and then modifies the needle position and LED color to reflect that value.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;parts.webp&#34; alt=&#34;A deconstructed view of the NuVu meter&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;p&gt;The code, enclosure, and schematics are all on &lt;a href=&#34;https://github.com/bitwisebones/nuvu-meter&#34;&gt;Github&lt;/a&gt; in case you want to use them as inspiration for your own project.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Personal PC Setup</title>
      <link>/posts/personal-pc-setup/</link>
      <pubDate>Tue, 23 Jan 2024 12:05:48 -0500</pubDate>
      
      <guid>/posts/personal-pc-setup/</guid>
      <description>I&amp;rsquo;ve had many different PC setups throughout the years. Here are some that I was able to find pictures of, starting with my first post-college apartment in 2012. Prior to college, my family had a few various Packard Bell, Gateway, and Dell desktops.
2012 Ikea desk, 23 inch HP monitor, 14 inch HP laptop
2014 Different Ikea desk, same HP monitor, first mechanical keyboard (Cherry MX Blue switches), Not pictured: new desktop PC with an 🌟SSD🌟</description>
      <content>&lt;p&gt;I&amp;rsquo;ve had many different PC setups throughout the years. Here are some that I was able to find pictures of, starting with my first post-college apartment in 2012. Prior to college, my family had a few various Packard Bell, Gateway, and Dell desktops.&lt;/p&gt;
&lt;h2 id=&#34;2012&#34;&gt;2012&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2012.jpg&#34; alt=&#34;An ikea desk with a monitor and laptop on it&#34;&gt;
&lt;em&gt;Ikea desk, 23 inch HP monitor, 14 inch HP laptop&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2014&#34;&gt;2014&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2014.jpg&#34; alt=&#34;An ikea desk with a computer monitor and keyboard&#34;&gt;
&lt;em&gt;Different Ikea desk, same HP monitor, first mechanical keyboard (Cherry MX Blue switches), Not pictured: new desktop PC with an 🌟SSD🌟&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2018&#34;&gt;2018&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2018.jpg&#34; alt=&#34;A standing height desk with a monitor and speakers on it&#34;&gt;
&lt;em&gt;New DIY desk, new 32 inch Acer monitor, same desktop PC from 2014, same mechanical keyboard but new trackball mouse&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2019&#34;&gt;2019&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2019.jpg&#34; alt=&#34;A workbench with two computer monitors and a microscope&#34;&gt;
&lt;em&gt;New 8ft Husky Workbench desk, side-by-side computer setup with some extra electronics stuff in between, new split ergodox keyboard&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2022&#34;&gt;2022&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2022.jpg&#34; alt=&#34;A standing desk with a treadmill under it&#34;&gt;
&lt;em&gt;By this point I was working from home. New sit/stand desk and a mini treadmill. New personal desktop by the window (Ryzen 5).&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2023&#34;&gt;2023&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2023.jpg&#34; alt=&#34;A desk with three monitors and a laptop on it&#34;&gt;
&lt;em&gt;Work laptop on the left, same personal desktop on the far right, 32 inch main monitor and 2x21 inch aux monitors for streams &amp;amp; security camera feeds, new NIZ plum keyboard. This is mostly how it looks today, although I did install a keyboard tray for better ergonomics.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Work PC Setup</title>
      <link>/posts/work-pc-setup/</link>
      <pubDate>Tue, 23 Jan 2024 12:05:48 -0500</pubDate>
      
      <guid>/posts/work-pc-setup/</guid>
      <description>Here&amp;rsquo;s a brief look at my various workstations throughout my career.
2012 My very first tech job working for the college I attended&amp;hellip;in a closet in the basement of a building on campus. Mostly performed maintenance on the college&amp;rsquo;s public and private websites which were built with WebForms in VB.
2013 First job out of college was a small marketing agency that was trying to transition from print to web. It was also a Mac shop.</description>
      <content>&lt;p&gt;Here&amp;rsquo;s a brief look at my various workstations throughout my career.&lt;/p&gt;
&lt;h2 id=&#34;2012&#34;&gt;2012&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2012.jpg&#34; alt=&#34;Two small square monitors&#34;&gt;
&lt;em&gt;My very first tech job working for the college I attended&amp;hellip;in a closet in the basement of a building on campus. Mostly performed maintenance on the college&amp;rsquo;s public and private websites which were built with WebForms in VB.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2013&#34;&gt;2013&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2013.jpg&#34; alt=&#34;A widescreen monitor and a mac mini&#34;&gt;
&lt;em&gt;First job out of college was a small marketing agency that was trying to transition from print to web. It was also a Mac shop.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2014&#34;&gt;2014&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2014.jpg&#34; alt=&#34;Two monitors on top of a pile of cardboard boxes&#34;&gt;
&lt;em&gt;Second job out of college (still my current employer!). This was when the standing desk craze first started and several of us used cardboard boxes to achieve the desired effect &amp;hellip;until the CIO brought some important folks through on a tour and then bought us all real sit/stand desks ;)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2016&#34;&gt;2016&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2016.jpg&#34; alt=&#34;Two monitors on a sit/stand desk&#34;&gt;
&lt;em&gt;Same monitors, real sit/stand desk. Also a plant, a map of Skyrim, and a trebuchet.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2018&#34;&gt;2018&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2018.jpg&#34; alt=&#34;Two widescreen monitors overlooking a large wall of windows&#34;&gt;
&lt;em&gt;Corner desk with a view (of some trees). I sat here until I started working from home full-time in February of 2020. Not pictured: AC vent directly above my chair.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Above: my professional portrait
Find Me GitHub: bitwisebones Mastodon: bitwisebones Email: bitwisebones at gmail Work Over the last decade as a professional developer, I&amp;rsquo;ve worked on many different types of applications, including:
CMS-managed websites Ecommerce Real-time distributed systems LOB/ERP Mobile And I&amp;rsquo;ve used a variety of technologies, including:
Old things I&amp;rsquo;d rather forget: PHP ColdFusion/Java Node.js, AngularJS, JavaScript New(er) things that I find enjoyable and productive: C# (WPF, ASP.NET) React(JS|Native), TypeScript SQL Server, Redis, RabbitMQ In recent years my role has transitioned from IC to management, though I still read and write code most days.</description>
      <content>&lt;p&gt;&lt;img src=&#34;cecil.jpg&#34; alt=&#34;Image of a computer with a face&#34;&gt;
&lt;em&gt;Above: my professional portrait&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;find-me&#34;&gt;Find Me&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/bitwisebones&#34;&gt;bitwisebones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mastodon: &lt;a href=&#34;https://mastodon.gamedev.place/@bitwisebones&#34;&gt;bitwisebones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Email: bitwisebones at gmail&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;
&lt;p&gt;Over the last decade as a professional developer, I&amp;rsquo;ve worked on many different types of applications, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CMS-managed websites&lt;/li&gt;
&lt;li&gt;Ecommerce&lt;/li&gt;
&lt;li&gt;Real-time distributed systems&lt;/li&gt;
&lt;li&gt;LOB/ERP&lt;/li&gt;
&lt;li&gt;Mobile&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And I&amp;rsquo;ve used a variety of technologies, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Old things I&amp;rsquo;d rather forget:
&lt;ul&gt;
&lt;li&gt;PHP&lt;/li&gt;
&lt;li&gt;ColdFusion/Java&lt;/li&gt;
&lt;li&gt;Node.js, AngularJS, JavaScript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;New(er) things that I find enjoyable and productive:
&lt;ul&gt;
&lt;li&gt;C# (WPF, ASP.NET)&lt;/li&gt;
&lt;li&gt;React(JS|Native), TypeScript&lt;/li&gt;
&lt;li&gt;SQL Server, Redis, RabbitMQ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In recent years my role has transitioned from IC to management, though I still read and write code most days.&lt;/p&gt;
&lt;h2 id=&#34;not-work&#34;&gt;Not Work&lt;/h2&gt;
&lt;p&gt;I do a lot of random things in short bursts with long periods of burnout in between.&lt;/p&gt;
&lt;p&gt;Things I do (or have done) and enjoy(ed), in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Game development (Godot, Unity, Raylib, Sokol)&lt;/li&gt;
&lt;li&gt;Reverse engineering of any kind (software, firmware, hardware)&lt;/li&gt;
&lt;li&gt;Programming language theory and design&lt;/li&gt;
&lt;li&gt;Learning new programming languages (Forth, Clojure, Zig)&lt;/li&gt;
&lt;li&gt;Electronics, PCB design, soldering&lt;/li&gt;
&lt;li&gt;3d printing, laser cutting&lt;/li&gt;
&lt;li&gt;TTRPGs (playing, DMing, creating)&lt;/li&gt;
&lt;li&gt;Lapidary, geology, rockhounding&lt;/li&gt;
&lt;li&gt;Gardening&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
