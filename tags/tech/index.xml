<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on ascii graves</title>
    <link>/tags/tech/</link>
    <description>Recent content in tech on ascii graves</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Dec 2024 00:00:00 -0500</lastBuildDate><atom:link href="/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shelly H&amp;T Gen3 Integration</title>
      <link>/posts/shelly-ht-gen3/</link>
      <pubDate>Tue, 24 Dec 2024 00:00:00 -0500</pubDate>
      
      <guid>/posts/shelly-ht-gen3/</guid>
      <description>I recently picked up two Shelly H&amp;amp;T Gen3 temperature and humidity sensors to help evaluate temperature differences between a few rooms in the house. I really like products that put me in control - the Shelly sensor is easily configured over wifi without creating an account, and it supports self-hosted MQTT brokers. 10/10, would buy again.
That said, there are some wrinkles. I want to walk through my initial integration and explain the drawbacks.</description>
      <content>&lt;p&gt;I recently picked up two &lt;a href=&#34;https://us.shelly.com/products/shelly-h-t-gen3-matte-black&#34;&gt;Shelly H&amp;amp;T Gen3&lt;/a&gt; temperature and humidity sensors to help evaluate temperature differences between a few rooms in the house. I really like products that put me in control - the Shelly sensor is easily configured over wifi without creating an account, &lt;em&gt;and&lt;/em&gt; it supports self-hosted MQTT brokers. 10/10, would buy again.&lt;/p&gt;
&lt;p&gt;That said, there are some wrinkles. I want to walk through my initial integration and explain the drawbacks. Then we&amp;rsquo;ll look at where I ultimately ended up.&lt;/p&gt;
&lt;h2 id=&#34;initial-attempt&#34;&gt;Initial Attempt&lt;/h2&gt;
&lt;p&gt;My standard pipeline for ingesting metrics via MQTT is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MQTT -&amp;gt; Node-RED -&amp;gt; PostgREST -&amp;gt; Postgres -&amp;gt; Grafana&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This works really well for my Emporia Vue 2 energy monitor as detailed &lt;a href=&#34;http://localhost:1313/posts/selfhosted-2024/#home-energy-monitoring&#34;&gt;here&lt;/a&gt;. In that case, the Vue sends a single message containing all metrics. The Shelly H&amp;amp;T, however, sends distinct messages for temperature and humidity readings (among other things):&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./mqtt-messages.png&#34; alt=&#34;A screenshot of MQTTExplorer showing the various messages sent by a Shelly H&amp;amp;T&#34;&gt;&lt;/p&gt;
&lt;p&gt;Having two sensor units also means that there are a total of four MQTT topics that I actually need to listen to, so my Node-RED flow looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./initial-flow.png&#34; alt=&#34;A screenshot of four identical pipelines in a node-red flow&#34;&gt;&lt;/p&gt;
&lt;p&gt;As a consequence, I can&amp;rsquo;t reliably store a given reading for both rooms at the same time. Where my energy metrics table looks like this&amp;hellip;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Timestamp&lt;/th&gt;
&lt;th&gt;Family Room&lt;/th&gt;
&lt;th&gt;Office&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:00&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;110&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:01&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:02&lt;/td&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;hellip;I&amp;rsquo;m forced to store my temperature metrics like this:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Timestamp&lt;/th&gt;
&lt;th&gt;Temperature&lt;/th&gt;
&lt;th&gt;Room&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:01&lt;/td&gt;
&lt;td&gt;65&lt;/td&gt;
&lt;td&gt;Family Room&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:01&lt;/td&gt;
&lt;td&gt;77&lt;/td&gt;
&lt;td&gt;Office&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:02&lt;/td&gt;
&lt;td&gt;66&lt;/td&gt;
&lt;td&gt;Family Room&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2024-12-24T00:02&lt;/td&gt;
&lt;td&gt;76&lt;/td&gt;
&lt;td&gt;Office&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now you might be thinking, &amp;ldquo;wait, the second option is definitely better!&amp;rdquo;, and in a &amp;ldquo;normal&amp;rdquo; (pun intended) database, you&amp;rsquo;d be right. But that makes building the Grafana dashboards more difficult and also means I need to include two columns in the index (timestamp and room) instead of just one (timestamp).&lt;/p&gt;
&lt;p&gt;And one final gripe - the Shelly H&amp;amp;T only sends out MQTT messages when the temperature or humidity changes by at least 0.5 units (either degrees C or percent, depending on the metric). That&amp;rsquo;s great for saving power, but makes the rate of updates inconsistent between rooms.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./annoying-charts.png&#34; alt=&#34;A chart with inconsistent updates along the x axis&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;second-attempt&#34;&gt;Second Attempt&lt;/h2&gt;
&lt;p&gt;Instead of pushing metrics to PostgREST/Postgres each time a message is received, I decided to store the value in a flow-scoped variable. When a new message is received, it updates the value held in one of the four variables - temp1, humidity1, temp2, humidity2.&lt;/p&gt;
&lt;p&gt;Then, once a minute, a separate pipeline reads the values of those variables and sends the data to PostgREST. This has the potential to introduce a &lt;em&gt;tiny&lt;/em&gt; amount of delay between when a value changes and when the change is actually recorded, but in my testing so far, the values don&amp;rsquo;t change very frequently at all.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the new flow:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./second-flow.png&#34; alt=&#34;A screenshot of a Node-RED flow that&amp;rsquo;s a bit simpler than the last one&#34;&gt;&lt;/p&gt;
&lt;p&gt;With this flow in place, I can now use the same timeseries database structure that I use for energy readings which makes the Grafana dashboard a piece of cake!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./better-charts.png&#34; alt=&#34;A screenshot of a grafana dashboard showing humidity and temperature with even intervals and no gaps&#34;&gt;&lt;/p&gt;
&lt;p&gt;Overall I&amp;rsquo;m happy with my purchase of the Shelly H&amp;amp;T Gen3. It was relatively cheap and fits into my existing infrastructure easily.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>2024 Self-Hosting Update</title>
      <link>/posts/selfhosted-2024/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 -0500</pubDate>
      
      <guid>/posts/selfhosted-2024/</guid>
      <description>I&amp;rsquo;m planning to make some changes to my self-hosting configuration in 2025, so I figured I would capture some details about my current set up for posterity.
Services First, let&amp;rsquo;s take a look at the various services that I&amp;rsquo;m running. I&amp;rsquo;ve organized these by &amp;ldquo;purpose&amp;rdquo;, with a catch-all category at the end. It&amp;rsquo;s worth noting that none of these services are critical. If Home Assistant or Z-Wave JS are down, the lights in the house still work.</description>
      <content>&lt;p&gt;I&amp;rsquo;m planning to make some changes to my self-hosting configuration in 2025, so I figured I would capture some details about my current set up for posterity.&lt;/p&gt;
&lt;h2 id=&#34;services&#34;&gt;Services&lt;/h2&gt;
&lt;p&gt;First, let&amp;rsquo;s take a look at the various services that I&amp;rsquo;m running. I&amp;rsquo;ve organized these by &amp;ldquo;purpose&amp;rdquo;, with a catch-all category at the end. It&amp;rsquo;s worth noting that none of these services are critical. If Home Assistant or Z-Wave JS are down, the lights in the house still work. If Pi-Hole DNS is down, the router uses a backup public DNS server. These services &lt;em&gt;do&lt;/em&gt; make my life better, but I can function without them.&lt;/p&gt;
&lt;h4 id=&#34;media&#34;&gt;Media&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jellyfin.org/&#34;&gt;Jellyfin&lt;/a&gt; for media streaming&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.servarr.com/&#34;&gt;*Arr Stack&lt;/a&gt; for media acquisition&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;home&#34;&gt;Home&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home Assistant&lt;/a&gt; for basic smart home controls&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://frigate.video/&#34;&gt;Frigate&lt;/a&gt; for security camera viewing and recording&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zwave-js/zwave-js-ui&#34;&gt;Z-Wave JS&lt;/a&gt; for integration with z-wave devices&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;productivity&#34;&gt;Productivity&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://linkding.link/&#34;&gt;linkding&lt;/a&gt; for the SingleFile archiving feature&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://readeck.org/en/&#34;&gt;Readeck&lt;/a&gt; for a &amp;ldquo;read later&amp;rdquo; list&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://silverbullet.md/&#34;&gt;SilverBullet&lt;/a&gt; for notes, wiki, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;supporting-services&#34;&gt;Supporting Services&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/garethgeorge/backrest&#34;&gt;Backrest&lt;/a&gt; for backups&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://filebrowser.org/&#34;&gt;File Browser&lt;/a&gt; for browsing archived PDFs and other files&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitea.com/&#34;&gt;Gitea&lt;/a&gt; for version control&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://grafana.com/&#34;&gt;Grafana&lt;/a&gt; for various home- and server-related dashboards&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mosquitto.org/&#34;&gt;Mosquitto&lt;/a&gt; for MQTT integration in Frigate, Z-Wave JS, and others&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nodered.org/&#34;&gt;Node-RED&lt;/a&gt; for several automated tasks based on schedules or MQTT triggers&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pi-hole.net/&#34;&gt;Pi-Hole&lt;/a&gt; for network-wide ad blocking and custom DNS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34;&gt;Postgres&lt;/a&gt; for storing data, specifically energy metrics&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.postgrest.org/en/v12/&#34;&gt;PostgREST&lt;/a&gt; for an easy way to send data to postgres from Node-RED&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt; for storing metrics&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dperson/samba&#34;&gt;Samba&lt;/a&gt; for sharing files to Windows workstations&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://traefik.io/traefik/&#34;&gt;Traefik&lt;/a&gt; for reverse proxying requests via subdomains&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://woodpecker-ci.org/&#34;&gt;Woodpecker CI&lt;/a&gt; for building and deploying services&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;interesting-use-cases&#34;&gt;Interesting Use Cases&lt;/h2&gt;
&lt;p&gt;Most of this stuff is pretty vanilla, but there are some interesting integrations that I&amp;rsquo;ve built over the years that might be slightly more novel.&lt;/p&gt;
&lt;h4 id=&#34;reading-and-notetaking-pipeline&#34;&gt;Reading and Notetaking Pipeline&lt;/h4&gt;
&lt;p&gt;I use Readeck to maintain a list of articles I want to read. When I have some downtime, I&amp;rsquo;ll pick something from the list and use the built-in reader mode to read and highlight articles. When I&amp;rsquo;m finished reading an article, I add a &amp;ldquo;recap&amp;rdquo; tag to it.&lt;/p&gt;
&lt;p&gt;Each night, a Node-RED flow runs and looks for new articles in Readeck with the &amp;ldquo;recap&amp;rdquo; tag. If it finds one, it creates a new page in SilverBullet with links to the original article, the reader-mode version stored in Readeck, and all of the passages that I highlighted. The new page also gets a &amp;ldquo;torecap&amp;rdquo; tag, causing it to show up in a query on my SilverBullet homepage.&lt;/p&gt;
&lt;p&gt;This workflow makes it really easy to find something to read, highlight important ideas, and then come back later to reflect on the content and take more detailed notes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;reading-pipeline.png&#34; alt=&#34;A screenshot of a node-red pipeline&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;home-energy-monitoring&#34;&gt;Home Energy Monitoring&lt;/h4&gt;
&lt;p&gt;I installed an &lt;a href=&#34;https://www.emporiaenergy.com/blog/introducing-emporia-vue/&#34;&gt;Emporia Vue 2&lt;/a&gt; so that I can record energy usage in my home at the circuit level. Thanks to some &lt;a href=&#34;https://flaviutamas.com/2021/reversing-emporia-vue-2&#34;&gt;smart people&lt;/a&gt; on the internet, I was able to reflash the device so that it connects to my local MQTT broker (Mosquitto).&lt;/p&gt;
&lt;p&gt;A Node-RED flow picks up all messages sent via MQTT from the Vue 2 and POSTs them to PostgREST, storing them in a postgres database. At this point I have ~4GB of metrics spanning around 2 years.&lt;/p&gt;
&lt;p&gt;I then built a Grafana dashboard that allows me to see energy consumption and estimated cost.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;energy-dashboard.png&#34; alt=&#34;A dashboard with several graphs indicating energy use over time as well as total cost&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;service-deployments&#34;&gt;Service Deployments&lt;/h4&gt;
&lt;p&gt;I take a GitOps-based approach to my self-hosted services using a combination of Gitea, Woodpecker CI, and Ansible.&lt;/p&gt;
&lt;p&gt;All of my services are deployed as Docker containers using Ansible&amp;rsquo;s &lt;code&gt;community.docker.docker_container&lt;/code&gt; module. I like Ansible because its vault allows me to commit encrypted secrets to the repo so that literally everything is in one spot.&lt;/p&gt;
&lt;p&gt;Rather than running Ansible manually, I run it in a Woodpecker pipeline using the &lt;a href=&#34;https://registry.hub.docker.com/r/librespace/ansible&#34;&gt;librespace/ansible&lt;/a&gt; image. I pass docker.sock and some file paths through to the Woodpecker runner container as volumes so that Ansible can interact with Docker on the host machine. Deploying a new container is as easy as adding a new YAML file to the repo and pushing. Woodpecker will run the pipeline and deploy the new container via Ansible.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s a little janky and terribly insecure, but it&amp;rsquo;s easy to set up and has served me well.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;I have a single desktop PC from ~2013 running all of my self-hosted services. It has an i5-4670K CPU and 16 GB of RAM. I also have a Z-Wave USB dongle for home automation and a Google Coral TPU USB dongle for Frigate&amp;rsquo;s object detection functionality.&lt;/p&gt;
&lt;p&gt;For storage I have a 120 GB SSD boot drive, a 2 TB SSD for &amp;ldquo;normal&amp;rdquo; storage, and a 2 TB HDD for security camera recordings. Disk redundancy is on my to-do list for 2025.&lt;/p&gt;
&lt;p&gt;Overall the system performs quite well for the workload. Offloading the object detection to the Coral TPU saves a ton of CPU.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;system-load.png&#34; alt=&#34;a chart showing moderately low system load over the past seven days&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;looking-forward&#34;&gt;Looking Forward&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;d like to focus on two areas for improvement in 2025 - hardware and deployments.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m hoping to build out a new &amp;ldquo;server&amp;rdquo; for the services I&amp;rsquo;ve listed above. I&amp;rsquo;m not looking at anything too new or fancy, just a slightly newer CPU, a little more RAM, and some additional disks probably running ZFS for better redundancy.&lt;/p&gt;
&lt;p&gt;If I can get that new machine in place, I&amp;rsquo;d like to repurpose the old PC as a true lab machine. I&amp;rsquo;ll probably install proxmox so that I can virtualize windows and linux as necessary for research projects.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d also like to replace my Gitea/Woodpecker/Ansible set up for deployments. I currently have my eye on &lt;a href=&#34;https://komo.do/&#34;&gt;Komodo&lt;/a&gt;. Hopefully I can use its &lt;a href=&#34;https://komo.do/docs/sync-resources&#34;&gt;resource syncing&lt;/a&gt; feature to keep all of the configuration in version control like I have now. Not 100% sure how I&amp;rsquo;ll handle secrets yet, so if you have any ideas - let me know!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Nintendo DS Homebrew Setup</title>
      <link>/posts/nds-homebrew-setup/</link>
      <pubDate>Mon, 01 Jul 2024 12:15:03 -0500</pubDate>
      
      <guid>/posts/nds-homebrew-setup/</guid>
      <description>I bought a Nintendo DS Lite on ebay for some future projects and wanted to be able to compile and run my own programs on it. The following is a rough recounting of the process.
Hardware From a hardware perspective, the only other things I needed were:
&amp;ldquo;R4&amp;rdquo; Flashcard: https://www.amazon.com/dp/B098T6VMYQ SanDisk 128 GB Micro SD card: https://www.amazon.com/dp/B0B7NTY2S6 (Not affiliate links)
Kernel/Launcher To prep the SD card, I formatted it with Rufus using the following settings:</description>
      <content>&lt;p&gt;I bought a Nintendo DS Lite on ebay for some future projects and wanted to be able to compile and run my own programs on it. The following is a rough recounting of the process.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;From a hardware perspective, the only other things I needed were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;R4&amp;rdquo; Flashcard: &lt;a href=&#34;https://www.amazon.com/dp/B098T6VMYQ&#34;&gt;https://www.amazon.com/dp/B098T6VMYQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SanDisk 128 GB Micro SD card: &lt;a href=&#34;https://www.amazon.com/dp/B0B7NTY2S6&#34;&gt;https://www.amazon.com/dp/B0B7NTY2S6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Not affiliate links)&lt;/p&gt;
&lt;h2 id=&#34;kernellauncher&#34;&gt;Kernel/Launcher&lt;/h2&gt;
&lt;p&gt;To prep the SD card, I formatted it with &lt;a href=&#34;https://rufus.ie/en/&#34;&gt;Rufus&lt;/a&gt; using the following settings:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;rufus-settings.png&#34; alt=&#34;A screenshot of rufus showing the settings used&#34;&gt;&lt;/p&gt;
&lt;p&gt;The important bits here are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boot selection: Non bootable&lt;/li&gt;
&lt;li&gt;File system: Large FAT32&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With that done, I needed to download a kernel. The kernel acts as a launcher - it allows you to browse the files on the SD card (or a slot-2 cartridge) and select which one to run.&lt;/p&gt;
&lt;p&gt;The kernel I used is &amp;ldquo;Ace3DS+ Wood R4 v1.62&amp;rdquo;. You can find more information on &lt;a href=&#34;https://www.flashcarts.net/ds-quick-start-guide&#34;&gt;The Flashcarts Wiki&lt;/a&gt;, but here&amp;rsquo;s a direct download link: &lt;a href=&#34;https://flashcard-archive.ds-homebrew.com/Ace3DS+_R4iLS/Ace3DS+_R4iLS_Wood_R4_1.62.zip&#34;&gt;https://flashcard-archive.ds-homebrew.com/Ace3DS+_R4iLS/Ace3DS+_R4iLS_Wood_R4_1.62.zip&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I unzipped the file and copied the contents onto the SD card.&lt;/p&gt;
&lt;p&gt;Now, with the SD card in the R4 flashcard and the R4 in the DS, the DS successfully boots into the launcher.&lt;/p&gt;
&lt;h2 id=&#34;building-a-homebrew-ds-game&#34;&gt;Building a Homebrew DS Game&lt;/h2&gt;
&lt;p&gt;Setting up a development environment was much easier than I thought it would be, mainly thanks to dev containers.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: here&amp;rsquo;s a great YouTube video that covers the basics of dev containers if you&amp;rsquo;re unfamiliar (like I was): &lt;a href=&#34;https://www.youtube.com/watch?v=SDa3v4Quj7Y&#34;&gt;https://www.youtube.com/watch?v=SDa3v4Quj7Y&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, let&amp;rsquo;s talk about prerequisites. I already had VS Code and Docker Desktop installed on my Windows dev machine. I also installed two VS Code extensions: &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack&#34;&gt;Remote Development&lt;/a&gt; and &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools&#34;&gt;C/C++&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The next step was to create a dev container. Thanks to the video I linked above, I knew to use the &amp;ldquo;Clone Repository in Container Volume&amp;rdquo; command to clone an empty repo into a new dev container. I used a basic Debian image because I knew I&amp;rsquo;d be changing it later.&lt;/p&gt;
&lt;p&gt;Now that the container was created, I was able to edit the devcontainer.json config file. I chose to swap out the direct image reference for a reference to a Dockerfile, but that turned out not to be necessary in the end. It should be sufficient to change the image to be the latest version of &lt;code&gt;devkitpro/devkitarm&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;devcontainer.json&amp;gt;

{
	&amp;#34;name&amp;#34;: &amp;#34;NDS&amp;#34;,
	&amp;#34;image&amp;#34;: &amp;#34;devkitpro/devkitarm:20240511&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;rsquo;ve yet to mention &lt;a href=&#34;https://devkitpro.org/&#34;&gt;devkitPro&lt;/a&gt; - this is a toolchain and set of libraries that make it easy to write NDS games. They provide a bunch of &lt;a href=&#34;https://github.com/devkitPro/nds-examples&#34;&gt;examples&lt;/a&gt; that I referenced to get my project set up correctly.&lt;/p&gt;
&lt;p&gt;I copied a Makefile from the example repo, so I made sure to keep my directory layout the same&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;project root/
&lt;ul&gt;
&lt;li&gt;.devcontainer/
&lt;ul&gt;
&lt;li&gt;devcontainer.json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data/&lt;/li&gt;
&lt;li&gt;source/
&lt;ul&gt;
&lt;li&gt;main.cpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Makefile&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The full repo is available on GitHub: &lt;a href=&#34;https://github.com/bitwisebones/nds-homebrew-example&#34;&gt;https://github.com/bitwisebones/nds-homebrew-example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With that all in place, I ran &lt;code&gt;make&lt;/code&gt; in the root folder in the container, and the &lt;code&gt;.nds&lt;/code&gt; file was successfully built.&lt;/p&gt;
&lt;p&gt;The last piece of the puzzle for me was getting the &lt;code&gt;.nds&lt;/code&gt; file onto the SD card. Just &lt;em&gt;finding&lt;/em&gt; that file (in the dev container&amp;rsquo;s volume, somewhere in the WSL filesystem) was a pain. The magic path for my Docker Desktop install was:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;\\wsl.localhost\docker-desktop-data\data\docker\volumes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s the whole process. I was also able to run the .nds file on an &lt;a href=&#34;http://desmume.org/&#34;&gt;emulator&lt;/a&gt; to test changes before I went through the physical process of copying it to the SD card (which can be tedious).&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Personal PC Setup</title>
      <link>/posts/personal-pc-setup/</link>
      <pubDate>Tue, 23 Jan 2024 12:05:48 -0500</pubDate>
      
      <guid>/posts/personal-pc-setup/</guid>
      <description>I&amp;rsquo;ve had many different PC setups throughout the years. Here are some that I was able to find pictures of, starting with my first post-college apartment in 2012. Prior to college, my family had a few various Packard Bell, Gateway, and Dell desktops.
2012 Ikea desk, 23 inch HP monitor, 14 inch HP laptop
2014 Different Ikea desk, same HP monitor, first mechanical keyboard (Cherry MX Blue switches), Not pictured: new desktop PC with an 🌟SSD🌟</description>
      <content>&lt;p&gt;I&amp;rsquo;ve had many different PC setups throughout the years. Here are some that I was able to find pictures of, starting with my first post-college apartment in 2012. Prior to college, my family had a few various Packard Bell, Gateway, and Dell desktops.&lt;/p&gt;
&lt;h2 id=&#34;2012&#34;&gt;2012&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2012.jpg&#34; alt=&#34;An ikea desk with a monitor and laptop on it&#34;&gt;
&lt;em&gt;Ikea desk, 23 inch HP monitor, 14 inch HP laptop&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2014&#34;&gt;2014&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2014.jpg&#34; alt=&#34;An ikea desk with a computer monitor and keyboard&#34;&gt;
&lt;em&gt;Different Ikea desk, same HP monitor, first mechanical keyboard (Cherry MX Blue switches), Not pictured: new desktop PC with an 🌟SSD🌟&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2018&#34;&gt;2018&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2018.jpg&#34; alt=&#34;A standing height desk with a monitor and speakers on it&#34;&gt;
&lt;em&gt;New DIY desk, new 32 inch Acer monitor, same desktop PC from 2014, same mechanical keyboard but new trackball mouse&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2019&#34;&gt;2019&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2019.jpg&#34; alt=&#34;A workbench with two computer monitors and a microscope&#34;&gt;
&lt;em&gt;New 8ft Husky Workbench desk, side-by-side computer setup with some extra electronics stuff in between, new split ergodox keyboard&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2022&#34;&gt;2022&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2022.jpg&#34; alt=&#34;A standing desk with a treadmill under it&#34;&gt;
&lt;em&gt;By this point I was working from home. New sit/stand desk and a mini treadmill. New personal desktop by the window (Ryzen 5).&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2023&#34;&gt;2023&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2023.jpg&#34; alt=&#34;A desk with three monitors and a laptop on it&#34;&gt;
&lt;em&gt;Work laptop on the left, same personal desktop on the far right, 32 inch main monitor and 2x21 inch aux monitors for streams &amp;amp; security camera feeds, new NIZ plum keyboard. This is mostly how it looks today, although I did install a keyboard tray for better ergonomics.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Work PC Setup</title>
      <link>/posts/work-pc-setup/</link>
      <pubDate>Tue, 23 Jan 2024 12:05:48 -0500</pubDate>
      
      <guid>/posts/work-pc-setup/</guid>
      <description>Here&amp;rsquo;s a brief look at my various workstations throughout my career.
2012 My very first tech job working for the college I attended&amp;hellip;in a closet in the basement of a building on campus. Mostly performed maintenance on the college&amp;rsquo;s public and private websites which were built with WebForms in VB.
2013 First job out of college was a small marketing agency that was trying to transition from print to web. It was also a Mac shop.</description>
      <content>&lt;p&gt;Here&amp;rsquo;s a brief look at my various workstations throughout my career.&lt;/p&gt;
&lt;h2 id=&#34;2012&#34;&gt;2012&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2012.jpg&#34; alt=&#34;Two small square monitors&#34;&gt;
&lt;em&gt;My very first tech job working for the college I attended&amp;hellip;in a closet in the basement of a building on campus. Mostly performed maintenance on the college&amp;rsquo;s public and private websites which were built with WebForms in VB.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2013&#34;&gt;2013&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2013.jpg&#34; alt=&#34;A widescreen monitor and a mac mini&#34;&gt;
&lt;em&gt;First job out of college was a small marketing agency that was trying to transition from print to web. It was also a Mac shop.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2014&#34;&gt;2014&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2014.jpg&#34; alt=&#34;Two monitors on top of a pile of cardboard boxes&#34;&gt;
&lt;em&gt;Second job out of college (still my current employer!). This was when the standing desk craze first started and several of us used cardboard boxes to achieve the desired effect &amp;hellip;until the CIO brought some important folks through on a tour and then bought us all real sit/stand desks ;)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2016&#34;&gt;2016&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2016.jpg&#34; alt=&#34;Two monitors on a sit/stand desk&#34;&gt;
&lt;em&gt;Same monitors, real sit/stand desk. Also a plant, a map of Skyrim, and a trebuchet.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2018&#34;&gt;2018&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;2018.jpg&#34; alt=&#34;Two widescreen monitors overlooking a large wall of windows&#34;&gt;
&lt;em&gt;Corner desk with a view (of some trees). I sat here until I started working from home full-time in February of 2020. Not pictured: AC vent directly above my chair.&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
